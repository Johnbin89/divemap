name: Backend Tests

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    


    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd backend
        python -m venv divemap_venv
        source divemap_venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        cd backend
        source divemap_venv/bin/activate
        export PYTHONPATH="/home/runner/work/divemap/divemap/backend/divemap_venv/lib/python3.11/site-packages:$PYTHONPATH"
        echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
        echo "DATABASE_URL=sqlite:///./test.db" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV

    - name: Run backend tests
      run: |
        cd backend
        source divemap_venv/bin/activate
        python -m pytest tests/ -v --cov=app --cov-report=term-missing --cov-report=html --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        directory: ./backend/htmlcov/
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          backend/htmlcov/
          backend/.pytest_cache/ 
